---------------------------------------------------------------------
File:      build.txt
Content:   How to build this project
---------------------------------------------------------------------

Used Compiler:
==============
Windows: 
   MinGW 8.1.0
   CMake 3.19.2
   Ninja 1.7.2
Ubuntu 20.04: 
   GCC 9.3.0 (32-bit)
   CMake 3.16.3

Editor:
=======
Windows: Qt Creator 4.14.2
Ubuntu: Qt Creator 4.11.0

How to build:
=============
Windows:
   cd ../bat
   build.bat (paths to compiler, cmake, ninja might need to be adapted in this file depending on the installation)
Ubuntu: 
   cd ../bat
   chmod +x ./build.sh
   ./build.sh
Other targets:
   check infos in directory "target_integration" 


How to use in Qt Creator:
=========================
Open project file CMakeLists.txt in Qt Creator and add CMAKE_TOOLCHAIN_FILE 
variable to build settings (value = path to e.g. toolchain_windows.cmake).
Make sure to use a 32 bit compiler.
To get the resulting binary directly in result directory, 
add build step "install" in project configuration.

For building on a 64-bit Ubuntu machine but with a 32-bit compiler:
- install gcc-multilib and g++-multilib
- open Qt creator
   - add new kit (Projects > Manage Kits > Add)
   - adapt CMake configuration (Projects > Manage Kits > <YourNewKit> > CMake Configuration > Change)
   - remove those two lines, because they else overwrite our configuration in the provided toolchain file:
      CMAKE_CXX_COMPILER:STRING=%{Compiler:Executable:Cxx}
      CMAKE_C_COMPILER:STRING=%{Compiler:Executable:C}
   - adapt resp. add CMake flags (Projects > CMake):
      CMAKE_CXX_FLAGS                  -m32
      CMAKE_CXX_FLAGS_DEBUG            -m32
      CMAKE_C_FLAGS                    -m32
      CMAKE_C_FLAGS_DEBUG              -m32
      CMAKE_SHARED_LINKER_FLAGS        "-m32"
      CMAKE_SHARED_LINKER_FLAGS_DEBUG  "-m32"
      CMAKE_CXX_COMPILER               /bin/g++ (should not be necessary, just to make sure)
      CMAKE_TOOLCHAIN_FILE             ../pjt/toolchain_ubuntu.cmake (maybe using absolute path is safer)
   - add build step "install"
   - build project
   - to verify the executable is 32-bit, execute "file SYDEsup" on command line


