//----------------------------------------------------------------------------------------------------------------------
/*!
   \file
   \brief       Base class for all graphics items which require unique identification (implementation)

   Base class for all graphics items which require unique identification

   \copyright   Copyright 2016 Sensor-Technik Wiedemann GmbH. All rights reserved.
*/
//----------------------------------------------------------------------------------------------------------------------

/* -- Includes ------------------------------------------------------------------------------------------------------ */
#include "precomp_headers.hpp"

#include "C_GiUnique.hpp"

/* -- Used Namespaces ----------------------------------------------------------------------------------------------- */
using namespace stw::opensyde_gui_logic;

/* -- Module Global Constants --------------------------------------------------------------------------------------- */

/* -- Types --------------------------------------------------------------------------------------------------------- */

/* -- Global Variables ---------------------------------------------------------------------------------------------- */

/* -- Module Global Variables --------------------------------------------------------------------------------------- */

/* -- Module Global Function Prototypes ----------------------------------------------------------------------------- */

/* -- Implementation ------------------------------------------------------------------------------------------------ */

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Default constructor

   \param[in] oru64_Id Unique ID
*/
//----------------------------------------------------------------------------------------------------------------------
C_GiUnique::C_GiUnique(const uint64_t & oru64_Id) :
   mu64_Id(oru64_Id)
{
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Default destructor
*/
//----------------------------------------------------------------------------------------------------------------------
C_GiUnique::~C_GiUnique(void)
{
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Check if unique ID matches

   \param[in] oru64_Id Unique ID to check for

   \return
   true:  match
   false: no match
*/
//----------------------------------------------------------------------------------------------------------------------
bool C_GiUnique::CheckMatch(const uint64_t & oru64_Id) const
{
   return (this->mu64_Id == oru64_Id);
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Get ID

   \return
   Current ID
*/
//----------------------------------------------------------------------------------------------------------------------
uint64_t C_GiUnique::GetId() const
{
   return mu64_Id;
}
