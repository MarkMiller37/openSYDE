//----------------------------------------------------------------------------------------------------------------------
/*!
   \file
   \brief       Class with size functionality (implementation)

   \copyright   Copyright 2016 Sensor-Technik Wiedemann GmbH. All rights reserved.
*/
//----------------------------------------------------------------------------------------------------------------------

/* -- Includes ------------------------------------------------------------------------------------------------------ */
#include "precomp_headers.hpp"

#include <QRectF>

#include "stwtypes.hpp"
#include "C_GiBiSizeableItem.hpp"

/* -- Used Namespaces ----------------------------------------------------------------------------------------------- */
using namespace stw::opensyde_gui;

/* -- Module Global Constants --------------------------------------------------------------------------------------- */

/* -- Types --------------------------------------------------------------------------------------------------------- */

/* -- Global Variables ---------------------------------------------------------------------------------------------- */

/* -- Module Global Variables --------------------------------------------------------------------------------------- */

/* -- Module Global Function Prototypes ----------------------------------------------------------------------------- */

/* -- Implementation ------------------------------------------------------------------------------------------------ */

//----------------------------------------------------------------------------------------------------------------------
/*! \brief  Default constructor
*/
//----------------------------------------------------------------------------------------------------------------------
C_GiBiSizeableItem::C_GiBiSizeableItem() :
   f64_Width(0.0),
   f64_Height(0.0)
{
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief  Default constructor

   \param[in] of64_Width  Width
   \param[in] of64_Height Height
*/
//----------------------------------------------------------------------------------------------------------------------
C_GiBiSizeableItem::C_GiBiSizeableItem(const float64_t of64_Width, const float64_t of64_Height) :
   f64_Width(of64_Width),
   f64_Height(of64_Height)
{
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief  Default destructor
*/
//----------------------------------------------------------------------------------------------------------------------
C_GiBiSizeableItem::~C_GiBiSizeableItem()
{
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief  Returns the size as rectangle

   \return  Rectangle with actual size
*/
//----------------------------------------------------------------------------------------------------------------------
QRectF C_GiBiSizeableItem::GetSizeRect(void) const
{
   return QRectF(0.0, 0.0, this->f64_Width, this->f64_Height);
}
